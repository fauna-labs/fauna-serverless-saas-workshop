# Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
# SPDX-License-Identifier: MIT-0

AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: >
  Template to Bootstrap the Common Resources
Parameters:
  AdminEmailParameter:
    Type: String
    Default: "test@test.com"
    Description: "Enter system admin email address"
  SystemAdminRoleNameParameter:
    Type: String
    Default: "SystemAdmin"
    Description: "Enter the role name for system admin"
  ApiKeyOperationUsersParameter:
    Type: String
    Default: "9a7743fa-3ae7-11eb-adc1-0242ac120002"
    Description: "Enter default api key value to be used by api gateway for system admins"
  ApiKeyPlatinumTierParameter:
    Type: String
    Default: "88b43c36-802e-11eb-af35-38f9d35b2c15"
    Description: "Enter default api key value to be used by api gateway for platinum tier tenants"
  ApiKeyPremiumTierParameter:
    Type: String
    Default: "6db2bdc2-6d96-11eb-a56f-38f9d33cfd0f"
    Description: "Enter default api key value to be used by api gateway for premium tier tenants"
  ApiKeyStandardTierParameter:
    Type: String
    Default: "b1c735d8-6d96-11eb-a28b-38f9d33cfd0f"
    Description: "Enter default api key value to be used by api gateway for standard tier tenants"
  ApiKeyBasicTierParameter:
    Type: String
    Default: "daae9784-6d96-11eb-a28b-38f9d33cfd0f"
    Description: "Enter default api key value to be used by api gateway for basic tier tenants"
  StageName:
    Type: String
    Default: "prod"
    Description: "Stage Name for the api"
  StackName:
    Type: String
    Default: "serverless-saas-workshop"
  ParameterStoreFaunaAppConfigPublic:
    Type: String
    Default: '{"domain": "db.fauna.com"}'
    Description: ""
Resources:
  DynamoDBTables:
    Type: AWS::Serverless::Application
    Properties:
      Location: nested_templates/tables.yaml
      Parameters:
        StackName: !Ref StackName

  #Create cloudfront and s3 for UI Cde
  UserInterface:
    Type: AWS::Serverless::Application
    Properties:
      Location: nested_templates/userinterface.yaml
      
  Cognito:
    Type: AWS::Serverless::Application
    DependsOn: UserInterface
    Properties:
      Location: nested_templates/cognito.yaml
      Parameters:
        StackName: !Ref StackName
        AdminEmailParameter: !Ref AdminEmailParameter
        SystemAdminRoleNameParameter: !Ref SystemAdminRoleNameParameter
        AdminUserPoolCallbackURLParameter: !GetAtt UserInterface.Outputs.ApplicationSite
        TenantUserPoolCallbackURLParameter: !GetAtt UserInterface.Outputs.ApplicationSite
        
  LambdaFunctions:
    Type: AWS::Serverless::Application
    DependsOn: UserInterface
    Properties:
      Location: nested_templates/lambdafunctions.yaml
      Parameters:
        StackName: !Ref StackName
        ParameterStoreFaunaConfig: !Sub '/${StackName}/faunadb/config'
        ParameterStoreFaunaAppConfigPublic: !Ref ParameterStoreFaunaAppConfigPublic
        CognitoUserPoolId: !GetAtt Cognito.Outputs.CognitoUserPoolId
        CognitoUserPoolClientId: !GetAtt Cognito.Outputs.CognitoUserPoolClientId                
        CognitoOperationUsersUserPoolId: !GetAtt Cognito.Outputs.CognitoOperationUsersUserPoolId
        CognitoOperationUsersUserPoolClientId: !GetAtt Cognito.Outputs.CognitoOperationUsersUserPoolClientId
        ServerlessSaaSSettingsTableArn: !GetAtt DynamoDBTables.Outputs.ServerlessSaaSSettingsTableArn
        TenantStackMappingTableArn: !GetAtt DynamoDBTables.Outputs.TenantStackMappingTableArn
        TenantStackMappingTableName: !GetAtt DynamoDBTables.Outputs.TenantStackMappingTableName
        TenantUserPoolCallbackURLParameter: !GetAtt UserInterface.Outputs.ApplicationSite 
        ApiKeyOperationUsersParameter: !Ref ApiKeyOperationUsersParameter
        ApiKeyPlatinumTierParameter: !Ref ApiKeyPlatinumTierParameter
        ApiKeyPremiumTierParameter: !Ref ApiKeyPremiumTierParameter
        ApiKeyStandardTierParameter: !Ref ApiKeyStandardTierParameter
        ApiKeyBasicTierParameter: !Ref ApiKeyBasicTierParameter        
        
  APIs:
    Type: AWS::Serverless::Application
    DependsOn: LambdaFunctions
    Properties:
      Location: nested_templates/apigateway.yaml
      Parameters:
        StackName: !Ref StackName
        StageName: !Ref StageName
        RegisterTenantLambdaExecutionRoleArn: !GetAtt LambdaFunctions.Outputs.RegisterTenantLambdaExecutionRoleArn          
        TenantManagementLambdaExecutionRoleArn: !GetAtt LambdaFunctions.Outputs.TenantManagementLambdaExecutionRoleArn          
        RegisterTenantFunctionArn: !GetAtt LambdaFunctions.Outputs.RegisterTenantFunctionArn
        ProvisionTenantFunctionArn: !GetAtt LambdaFunctions.Outputs.ProvisionTenantFunctionArn
        DeProvisionTenantFunctionArn: !GetAtt LambdaFunctions.Outputs.DeProvisionTenantFunctionArn
        ActivateTenantFunctionArn: !GetAtt LambdaFunctions.Outputs.ActivateTenantFunctionArn
        GetTenantsFunctionArn: !GetAtt LambdaFunctions.Outputs.GetTenantsFunctionArn
        GetTenantConfigFunctionArn: !GetAtt LambdaFunctions.Outputs.GetTenantConfigFunctionArn
        CreateTenantFunctionArn: !GetAtt LambdaFunctions.Outputs.CreateTenantFunctionArn
        GetTenantFunctionArn: !GetAtt LambdaFunctions.Outputs.GetTenantFunctionArn          
        DeactivateTenantFunctionArn: !GetAtt LambdaFunctions.Outputs.DeactivateTenantFunctionArn          
        UpdateTenantFunctionArn: !GetAtt LambdaFunctions.Outputs.UpdateTenantFunctionArn          
        GetUsersFunctionArn: !GetAtt LambdaFunctions.Outputs.GetUsersFunctionArn 
        GetUserFunctionArn: !GetAtt LambdaFunctions.Outputs.GetUserFunctionArn          
        UpdateUserFunctionArn: !GetAtt LambdaFunctions.Outputs.UpdateUserFunctionArn          
        DisableUserFunctionArn: !GetAtt LambdaFunctions.Outputs.DisableUserFunctionArn
        CreateTenantAdminUserFunctionArn: !GetAtt LambdaFunctions.Outputs.CreateTenantAdminUserFunctionArn
        CreateUserFunctionArn: !GetAtt LambdaFunctions.Outputs.CreateUserFunctionArn
        DisableUsersByTenantFunctionArn: !GetAtt LambdaFunctions.Outputs.DisableUsersByTenantFunctionArn
        EnableUsersByTenantFunctionArn: !GetAtt LambdaFunctions.Outputs.EnableUsersByTenantFunctionArn                  
        AuthorizerFunctionArn: !GetAtt LambdaFunctions.Outputs.SharedServicesAuthorizerFunctionArn  
        ApiKeyOperationUsersParameter: !Ref ApiKeyOperationUsersParameter
        ApiKeyPlatinumTierParameter: !Ref ApiKeyPlatinumTierParameter
        ApiKeyPremiumTierParameter: !Ref ApiKeyPremiumTierParameter
        ApiKeyStandardTierParameter: !Ref ApiKeyStandardTierParameter
        ApiKeyBasicTierParameter: !Ref ApiKeyBasicTierParameter         

  APIGatewayLambdaPermissions:
    Type: AWS::Serverless::Application
    DependsOn: LambdaFunctions
    Properties:
      Location: nested_templates/apigateway_lambdapermissions.yaml
      Parameters:
        RegisterTenantLambdaExecutionRoleArn: !GetAtt LambdaFunctions.Outputs.RegisterTenantLambdaExecutionRoleArn          
        TenantManagementLambdaExecutionRoleArn: !GetAtt LambdaFunctions.Outputs.TenantManagementLambdaExecutionRoleArn          
        RegisterTenantFunctionArn: !GetAtt LambdaFunctions.Outputs.RegisterTenantFunctionArn
        ProvisionTenantFunctionArn: !GetAtt LambdaFunctions.Outputs.ProvisionTenantFunctionArn
        DeProvisionTenantFunctionArn: !GetAtt LambdaFunctions.Outputs.DeProvisionTenantFunctionArn
        ActivateTenantFunctionArn: !GetAtt LambdaFunctions.Outputs.ActivateTenantFunctionArn
        GetTenantConfigFunctionArn: !GetAtt LambdaFunctions.Outputs.GetTenantConfigFunctionArn
        GetTenantsFunctionArn: !GetAtt LambdaFunctions.Outputs.GetTenantsFunctionArn
        CreateTenantFunctionArn: !GetAtt LambdaFunctions.Outputs.CreateTenantFunctionArn
        GetTenantFunctionArn: !GetAtt LambdaFunctions.Outputs.GetTenantFunctionArn          
        DeactivateTenantFunctionArn: !GetAtt LambdaFunctions.Outputs.DeactivateTenantFunctionArn          
        UpdateTenantFunctionArn: !GetAtt LambdaFunctions.Outputs.UpdateTenantFunctionArn          
        GetUsersFunctionArn: !GetAtt LambdaFunctions.Outputs.GetUsersFunctionArn 
        GetUserFunctionArn: !GetAtt LambdaFunctions.Outputs.GetUserFunctionArn          
        UpdateUserFunctionArn: !GetAtt LambdaFunctions.Outputs.UpdateUserFunctionArn          
        DisableUserFunctionArn: !GetAtt LambdaFunctions.Outputs.DisableUserFunctionArn
        CreateTenantAdminUserFunctionArn: !GetAtt LambdaFunctions.Outputs.CreateTenantAdminUserFunctionArn
        CreateUserFunctionArn: !GetAtt LambdaFunctions.Outputs.CreateUserFunctionArn
        DisableUsersByTenantFunctionArn: !GetAtt LambdaFunctions.Outputs.DisableUsersByTenantFunctionArn
        EnableUsersByTenantFunctionArn: !GetAtt LambdaFunctions.Outputs.EnableUsersByTenantFunctionArn          
        AuthorizerFunctionArn: !GetAtt LambdaFunctions.Outputs.SharedServicesAuthorizerFunctionArn         
        AdminApiGatewayApi: !GetAtt APIs.Outputs.AdminApiGatewayApi

  # setup custom resources
  CustomResources:
    Type: AWS::Serverless::Application
    DependsOn: APIs    
    Properties:
      Location: nested_templates/custom_resources.yaml
      Parameters:
        StackName: !Ref StackName
        ServerlessSaaSSettingsTableArn: !GetAtt DynamoDBTables.Outputs.ServerlessSaaSSettingsTableArn  
        ServerlessSaaSSettingsTableName: !GetAtt DynamoDBTables.Outputs.ServerlessSaaSSettingsTableName
        TenantStackMappingTableArn: !GetAtt DynamoDBTables.Outputs.TenantStackMappingTableArn
        TenantStackMappingTableName: !GetAtt DynamoDBTables.Outputs.TenantStackMappingTableName
        UpdateSettingsTableFunctionArn: !GetAtt LambdaFunctions.Outputs.UpdateSettingsTableFunctionArn
        UpdateTenantStackMapTableFunctionArn: !GetAtt LambdaFunctions.Outputs.UpdateTenantStackMapTableFunctionArn
        CognitoUserPoolId: !GetAtt Cognito.Outputs.CognitoUserPoolId
        CognitoUserPoolClientId: !GetAtt Cognito.Outputs.CognitoUserPoolClientId      

Outputs:
  AdminApi:
    Description: "API Gateway endpoint URL for Admin API"
    Value: !Join ["", ["https://", !GetAtt APIs.Outputs.AdminApiGatewayApi, ".execute-api.", !Ref "AWS::Region", ".amazonaws.com/", !Ref StageName, "/"]]
  ApplicationSiteBucket:
    Description: The S3 Bucket that will contain the static assets for the tenant application
    Value: !GetAtt UserInterface.Outputs.AppBucket
  ApplicationSite:
    Description: The name of the CloudFront url for Tenant Management site
    Value: !GetAtt UserInterface.Outputs.ApplicationSite
  CognitoOperationUsersUserPoolId:
    Description: The user pool id of Admin Management userpool 
    Value: !GetAtt Cognito.Outputs.CognitoOperationUsersUserPoolId
    Export:
      Name: "Svls-saas-wkshp-CognitoOperationUsersUserPoolId"  
  CognitoOperationUsersUserPoolProviderURL:
    Description: The Admin Management userpool provider url
    Value: !GetAtt Cognito.Outputs.CognitoOperationUsersUserPoolProviderURL
  CognitoOperationUsersUserPoolClientId:
    Description: The Admin Management userpool client id
    Value: !GetAtt Cognito.Outputs.CognitoOperationUsersUserPoolClientId
    Export:
      Name: "Svls-saas-wkshp-CognitoOperationUsersUserPoolClientId"
  CognitoTenantUserPoolId:
    Description: The user pool id for tenant user pool
    Value: !GetAtt Cognito.Outputs.CognitoUserPoolId
    Export:
      Name: "Svls-saas-wkshp-CognitoTenantUserPoolId"
  CognitoTenantAppClientId:
    Description: The app client id for tenant user pool
    Value: !GetAtt Cognito.Outputs.CognitoUserPoolClientId
    Export:
      Name: "Svls-saas-wkshp-CognitoTenantAppClientId"  
  AuthorizerExecutionRoleArn:
    Description: The Lambda authorizer execution role
    Value: !GetAtt LambdaFunctions.Outputs.AuthorizerExecutionRoleArn 
    Export:
      Name: "Svls-saas-wkshp-AuthorizerExecutionRoleArn"
  UpdateTenantApiGatewayUrlFunctionArn:
    Value: !GetAtt LambdaFunctions.Outputs.UpdateTenantApiGatewayUrlFunctionArn
    Export:
      Name: "Svls-saas-wkshp-UpdateTenantApigUrlFunction"
  GetTenantInfoFunctionArn:
    Value: !GetAtt LambdaFunctions.Outputs.GetTenantInfoFunctionArn
    Export:
      Name: "Svls-saas-wkshp-GetTenantInfoFunction"
  ProductFunctionExecutionRoleArn:
    Value: !GetAtt LambdaFunctions.Outputs.ProductFunctionExecutionRoleArn
    Export:
      Name: "Svls-saas-wkshp-ProductFunctionExecutionRoleArn"
  OrderFunctionExecutionRoleArn:
    Value: !GetAtt LambdaFunctions.Outputs.OrderFunctionExecutionRoleArn
    Export:
      Name: "Svls-saas-wkshp-OrderFunctionExecutionRoleArn"
  UsagePlanBasicTier: 
    Description: The basic tier usage plan
    Value: !GetAtt APIs.Outputs.UsagePlanBasicTier
    Export:
      Name: "Svls-saas-wkshp-UsagePlanBasicTier"
  UsagePlanStandardTier: 
    Description: The standard tier usage plan
    Value: !GetAtt APIs.Outputs.UsagePlanStandardTier
    Export:
      Name: "Svls-saas-wkshp-UsagePlanStandardTier"
  UsagePlanPremiumTier: 
    Description: The premium tier usage plan
    Value: !GetAtt APIs.Outputs.UsagePlanPremiumTier
    Export:
      Name: "Svls-saas-wkshp-UsagePlanPremiumTier"
  UsagePlanPlatinumTier: 
    Description: The premium tier usage plan
    Value: !GetAtt APIs.Outputs.UsagePlanPlatinumTier
    Export:
      Name: "Svls-saas-wkshp-UsagePlanPlatinumTier"
  ApiKeyOperationUsers:
    Description: The api key of system admins
    Value: !Ref ApiKeyOperationUsersParameter
    Export:
      Name: "Svls-saas-wkshp-ApiKeyOperationUsers"      